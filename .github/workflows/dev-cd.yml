name: "Development CD"

on:
  push:
    branches:
      - v1.x

jobs:
  Publish_docker_image:
    uses: ./github/workflows/dev-ci.yml

  Deploy-docker-image:
    name: Deploy
    needs: [Publish_docker_image]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to server
        env:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/known_hosts
          ssh-keyscan -H $host >> ~/.ssh/known_hosts

          echo "$key" >> ~/.ssh/id_rsa_server
          chmod 600 ~/.ssh/id_rsa_server
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_server
          #scp docker-compose.yml $username@$host:/var/gallery
        shell: bash

      # - name: Deploy New Image
      #   if: ${{ success() }}
      #   uses: appleboy/ssh-action@master
      #   env:
      #     AZURE_USER: ${{ secrets.AZURE_USER }}
      #     AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USER }}
      #     key: ${{ secrets.KEY }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       echo ${{ env.AZURE_PASSWORD }} | docker login amarpetdockerregistry.azurecr.io -u ${{ env.AZURE_USER}} --password-stdin
      #       cd /var/gallery
      #       docker-compose stop
      #       docker-compose pull
      #       docker-compose up -d

      # - name: Delete Previous Image
      #   if: ${{ success() }}
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USER }}
      #     key: ${{ secrets.KEY }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       docker image prune -af
