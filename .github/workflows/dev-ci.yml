name: "Development CI"

on:
  push:
    branches:
      - main

jobs:
  docker-image-build-publish:
    name: Publish docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env.local file
        run: |
          touch .env.local
          echo "NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" > .env.local
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env.local
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env.local
          echo "CLOUDINARY_FOLDER=${{ secrets.CLOUDINARY_FOLDER }}" >> .env.local
          cat .env.local
        shell: bash

      # - name: Log in to the github container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and publish image to github container registry
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ghcr.io/${{ github.repository }}:v1.x

      - name: Log in to the azure container registry
        uses: azure/docker-login@v1
        with:
          login-server: amarpetdockerregistry.azurecr.io
          username: ${{ secrets.AZURE_USER }}
          password: ${{ secrets.AZURE_PASSWORD }}

      - name: Build and push
        if: ${{ success() }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: amarpetdockerregistry.azurecr.io/blog:latest

      # rm docker-compose.yml
      # scp docker-compose.yml $username@$host:/var/www/blog/
      # cd /var/blog
      # rm docker-compose.yml
      # scp docker-compose.yml $username@$host:/var/blog/
      # ls -l

      # - name: Login and update docker compose file
      #   env:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USER }}
      #     key: ${{ secrets.KEY }}
      #     port: ${{ secrets.PORT }}
      #   run: |
      #     mkdir -p ~/.ssh/
      #     touch ~/.ssh/known_hosts
      #     ssh-keyscan -H $host >> ~/.ssh/known_hosts

      #     echo "$key" >> ~/.ssh/id_rsa_server
      #     chmod 600 ~/.ssh/id_rsa_server
      #     eval "$(ssh-agent -s)"
      #     ssh-add ~/.ssh/id_rsa_server
      #     # ssh $username@$host "cd /var/blog;sudo touch ala.txt"
      #     scp docker-compose.yml $username@$host:/var/gallery
      #   shell: bash

      # - name: Deploy New Image
      #   if: ${{ success() }}
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USER }}
      #     key: ${{ secrets.KEY }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       cd /var/gallery
      #       docker-compose stop
      #       docker-compose pull
      #       docker-compose up -d

      # - name: Delete Previous Image
      #   if: ${{ success() }}
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USER }}
      #     key: ${{ secrets.KEY }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       docker image prune -af
